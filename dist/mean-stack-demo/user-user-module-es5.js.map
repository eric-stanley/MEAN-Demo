{"version":3,"sources":["src/app/user/signup/signup.component.html","src/app/user/signup/signup.component.scss","src/app/user/signup/signup.component.ts","src/app/user/user-routing.module.ts","src/app/user/user.module.ts","src/app/user/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"main-div\\\">\\n<mat-card class=\\\"z-depth center\\\" flex=\\\"50\\\">\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input matInput name=\\\"name\\\" ngModel type=\\\"text\\\" placeholder=\\\"Name\\\" #nameInput=\\\"ngModel\\\" required />\\n      <mat-error *ngIf=\\\"nameInput.invalid\\\">Please enter your name</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-Mail\\\" #emailInput=\\\"ngModel\\\" required email />\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"password\\\" name=\\\"password\\\" ngModel #passwordInput=\\\"ngModel\\\" matInput placeholder=\\\"Password\\\" required />\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\n  </form>\\n</mat-card>\\n</div>\\n\";","export default \"mat-form-field {\\n  width: 100%; }\\n\\nmat-spinner {\\n  margin: auto; }\\n\\n.center {\\n  width: 75%;\\n  margin: 10px auto; }\\n\\n.main-div {\\n  height: 70vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGFubGV5ZXJpYy9Eb2N1bWVudHMvd29ya3NwYWNlL21lYW4tc3RhY2stZGVtby9zcmMvYXBwL3VzZXIvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLFlBQVksRUFBQTs7QUFHZDtFQUNFLFVBQVU7RUFDVixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VzZXIvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1zcGlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uY2VudGVye1xuICB3aWR0aDogNzUlO1xuICBtYXJnaW46IDEwcHggYXV0bztcbn1cblxuLm1haW4tZGl2e1xuICBoZWlnaHQ6IDcwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuIl19 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private signupStatusSub: Subscription;\n\n  constructor(public userService: UserService) { }\n\n  ngOnInit() {\n    this.signupStatusSub = this.userService\n      .getAuthStatusListener()\n      .subscribe(signupStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.userService.createUser(form.value.name,\n      form.value.email,\n      form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.signupStatusSub.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupComponent } from '../user/signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class UserRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { SignupComponent } from '../user/signup/signup.component';\nimport { UserRoutingModule } from './user-routing.module';\n\n\n@NgModule({\n  declarations: [\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AngularMaterialModule,\n    UserRoutingModule\n  ]\n})\n\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserData } from './user-data.model';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + '/user/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private signupStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getAuthStatusListener() {\n    return this.signupStatusListener.asObservable();\n  }\n\n  createUser(name: string, email: string, password: string) {\n    const userData: UserData = {\n      name,\n      email,\n      password\n    };\n    this.http.post(BACKEND_URL + 'signup', userData)\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      }, error => {\n        this.signupStatusListener.next(false);\n      });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"user-user-module-es5.js"}